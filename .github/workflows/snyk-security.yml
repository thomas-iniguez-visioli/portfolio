# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on: 
  workflow_dispatch:
  

permissions:
  contents: read

jobs:
   snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Snyk CLI to check for security issues
        uses: actions/setup-node@v4
        with:
           node-version: 20
      - uses: snyk/actions/setup@cdb760004ba9ea4d525f2e043745dfe85bb9077e
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Snyk Code test
        run: snyk auth --auth-type=token  ${{ secrets.SNYK_TOKEN }} && snyk test  --sarif > snyk-code.sarif  || true
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
    # Artifact name
            name: code # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
            path: snyk-code.sarif
    # The desired behavior if no files are found using the provided path.


        # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
        # Use || true to not fail the pipeline.
     
      - name: Upload result to GitHub Code Scanning
        uses: pixee/upload-tool-results-action@v2
        with:
          tool: 'snyk'
          file: snyk-code.sarif
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        

        # For Snyk Open Source you must first set up the development environment for your application's dependencies
        # For example for Node
  

          # This is where you will need to introduce the Snyk API token created with your Snyk account


        # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
        # Use || true to not fail the pipeline
    

        # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
     

        # Build the docker image for testing
      
        # Runs Snyk Container (Container and SCA) analysis and uploads result to Snyk.


        # Push the Snyk Code results into GitHub Code Scanning tab

